{"version":3,"sources":["components/SVGZoom.tsx","components/SVGForceSimulation.tsx","components/SVGTree.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["AxisX","props","transform","width","height","_useMemo","useMemo","scale","d3","domain","range","axis","ticks","tickSize","tickPadding","rescaleX","gRef","useRef","useEffect","current","call","react_default","a","createElement","className","ref","AxisY","_useMemo2","rescaleY","View","x","y","toString","Defs","id","x1","y1","x2","y2","offset","stopColor","SVGZoom","svgRef","buttonRef","_useState","useState","_useState2","Object","slicedToArray","changeTransform","svg","zoom","scaleExtent","on","transition","duration","assign","SVGZoom_Defs","SVGZoom_View","SVGZoom_AxisX","SVGZoom_AxisY","Node","node","dragStart","dragEnd","updateNodes","concat","datum","d","fx","fy","undefined","r","val","dy","name","SVGForceSimulation","_useStateRef","init","s","sf","useStateRef","_useStateRef2","zoomTransform","changeZoromTransform","zoomTransformRef","_useState3","nodes","_useState4","nodesChg","force","strength","radius","prev","toConsumableArray","useCallback","alphaTarget","restart","alpha","svgClick","_zoomTransformRef$cur","invert","offsetX","offsetY","_zoomTransformRef$cur2","item","length","newNodes","translateExtent","style","backgroundColor","map","SVGForceSimulation_Node","key","initNode","tree","root","descendants","forEach","data","pos0","pos1","visible","open","ActionClose","ActionOpen","ActionRemove","ActionStop","reducer","action","type","createNode","children","_children","newNode","find","childrenUpdate","child","n","childUpdate","parent","Context","createContext","_useContext","useContext","dispatch","nodeGRef","attr","g","createCloseAction","createOpenAction","createStopAction","createRemoveAction","opacity","fill","textAnchor","fontSize","diagonal","Link","pathRef","path","source","target","Fragment","App","size","createNodeFactory","initialRoot","_useReducer","useReducer","_useReducer2","Provider","value","viewBox","slice","SVGTree_Link","i","SVGTree_Node","SVGPure","cx","cy","SVGPureClick","fillChg","onClick","SVGD3","append","SVGD3Click","this","SVGD3ClickTransition","Circl","circleRef","SVGD3ClickTransitionReact","App_Circl","Circl2","_useState5","_useState6","_useState7","_useState8","fillAttr","fillAttrChg","SVGD3ClickTransitionReact2","App_Circl2","h1Refs","#pure-click","createRef","#d3","#react-d3-click","#react-d3-tr","#react-tr","#react-tr2","#zoom","#force","#tree","location","hash","setTimeout","scrollIntoView","block","behavior","App_SVGPure","App_SVGPureClick","App_SVGD3","App_SVGD3Click","App_SVGD3ClickTransition","App_SVGD3ClickTransitionReact","App_SVGD3ClickTransitionReact2","src_components_SVGZoom","src_components_SVGForceSimulation","components_SVGTree","Component","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.748a90d8.chunk.js","sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useRef,\n  useMemo,\n} from \"react\";\nimport * as d3 from \"d3\";\nimport \"./SVGZoom.css\";\n\nconst AxisX = (props: {\n  transform: d3.ZoomTransform;\n  width: number;\n  height: number;\n}) => {\n  const { transform, width, height } = props;\n  const { scale, axis } = useMemo(() => {\n    const scale = d3\n      .scaleLinear()\n      .domain([-1, width + 1])\n      .range([-1, width + 1]);\n    const axis = d3\n      .axisBottom(scale)\n      .ticks(((width + 2) / (height + 2)) * 10)\n      .tickSize(height)\n      .tickPadding(8 - height);\n    return { scale, axis };\n  }, [width, height]);\n\n  axis.scale(transform.rescaleX(scale));\n\n  const gRef = useRef(null);\n  useEffect(() => {\n    d3.select(gRef.current).call(axis as any);\n  });\n\n  return <g className=\"axis axis--x\" ref={gRef} />;\n};\n\nconst AxisY = (props: {\n  transform: d3.ZoomTransform;\n  width: number;\n  height: number;\n}) => {\n  const { transform, width, height } = props;\n  const { scale, axis } = useMemo(() => {\n    const scale = d3\n      .scaleLinear()\n      .domain([-1, height + 1])\n      .range([-1, height + 1]);\n    const axis = d3\n      .axisRight(scale)\n      .ticks(10)\n      .tickSize(width)\n      .tickPadding(8 - width);\n    return { scale, axis };\n  }, [width, height]);\n\n  axis.scale(transform.rescaleY(scale));\n\n  const gRef = useRef(null);\n  useEffect(() => {\n    d3.select(gRef.current).call(axis as any);\n  });\n  return <g className=\"axis axis--y\" ref={gRef} />;\n};\n\nconst View = (props: {\n  transform: d3.ZoomTransform;\n  width: number;\n  height: number;\n}) => {\n  const { transform, width, height } = props;\n  return (\n    <rect\n      className=\"view\"\n      x={0.5}\n      y={0.5}\n      width={width - 1}\n      height={height - 1}\n      transform={transform.toString()}\n    />\n  );\n};\n\nconst Defs = () => (\n  <defs>\n    <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n      <stop offset=\"0.0%\" stopColor=\"#2c7bb6\" />\n      <stop offset=\"12.5%\" stopColor=\"#00a6ca\" />\n      <stop offset=\"25.0%\" stopColor=\"#00ccbc\" />\n      <stop offset=\"37.5%\" stopColor=\"#90eb9d\" />\n      <stop offset=\"50.0%\" stopColor=\"#ffff8c\" />\n      <stop offset=\"62.5%\" stopColor=\"#f9d057\" />\n      <stop offset=\"75.0%\" stopColor=\"#f29e2e\" />\n      <stop offset=\"87.5%\" stopColor=\"#e76818\" />\n      <stop offset=\"100.0%\" stopColor=\"#d7191c\" />\n    </linearGradient>\n  </defs>\n);\n\nconst SVGZoom = (props: { width: number; height: number }) => {\n  const svgRef = useRef(null);\n  const buttonRef = useRef(null);\n  const [transform, changeTransform] = useState(d3.zoomIdentity);\n\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n    const zoomed = () => {\n      changeTransform(d3.event.transform);\n    };\n\n    const zoom = d3\n      .zoom()\n      .scaleExtent([1 / 2, 8])\n      .on(\"zoom\", zoomed);\n    zoom(svg as any);\n\n    d3.select(buttonRef.current).on(\"click\", () => {\n      zoom.transform(svg.transition().duration(750) as any, d3.zoomIdentity);\n    });\n  }, []);\n\n  return (\n    <div className=\"svgZoom\">\n      <button ref={buttonRef}>Reset</button>\n      <svg ref={svgRef} {...props}>\n        <Defs />\n        <View transform={transform} {...props} />\n        <AxisX transform={transform} {...props} />\n        <AxisY transform={transform} {...props} />\n      </svg>\n    </div>\n  );\n};\n\nexport default SVGZoom;\n","import React, {\n  useState,\n  useEffect,\n  useCallback,\n  useRef,\n  useMemo\n} from \"react\";\nimport * as d3 from \"d3\";\nimport { SimulationNodeDatum } from \"d3-force\";\nimport \"./SVGForceSimulation.css\";\n\n\ninterface NodeItem extends SimulationNodeDatum {\n  id: number;\n  name: string;\n  val: number;\n}\n\nfunction useStateRef<S>(\n  init: S\n): [S, (t: S | ((prev: S) => S)) => void, React.MutableRefObject<S>] {\n  const [s, sf] = useState(init);\n  const r = useRef(s);\n  r.current = s;\n  return [s, sf, r];\n}\n\nconst Node = (props: {\n  node: NodeItem;\n  dragStart: () => void;\n  dragEnd: () => void;\n  updateNodes: () => void;\n}) => {\n  const gRef = useRef(null);\n  const { node, dragStart, dragEnd, updateNodes } = props;\n  const transform = `translate(${node.x},${node.y})`;\n\n  useEffect(() => {\n    const g = d3.select(gRef.current!);\n    g.datum(node).call(d3\n      .drag<Element, NodeItem>()\n      .on(\"start\", d => {\n        d.fx = d.x;\n        d.fy = d.y;\n        dragStart();\n      })\n      .on(\"drag\", d => {\n        d.fx = d3.event.x;\n        d.fy = d3.event.y;\n        updateNodes();\n      })\n      .on(\"end\", d => {\n        d.fy = d.fx = undefined;\n        dragEnd();\n      }) as any);\n  }, []);\n\n  return (\n    <g className=\"node\" ref={gRef} transform={transform}>\n      <circle r={node.val} />\n      <text x={node.val + 5} dy=\".35em\">\n        {node.name}\n      </text>\n    </g>\n  );\n};\n\nconst SVGForceSimulation = (props: { width: number; height: number, nodes: NodeItem[] }) => {\n  const { width, height } = props;\n  const svgRef = useRef(null);\n  const [zoomTransform, changeZoromTransform, zoomTransformRef] = useStateRef(\n    d3.zoomIdentity\n  );\n  const [nodes, nodesChg] = useState(props.nodes);\n\n  const force = useMemo(() => {\n    const force = d3\n      .forceSimulation()\n      .nodes(nodes)\n      .force(\"x\", d3.forceX(width / 2).strength(0.1))\n      .force(\"y\", d3.forceY(height / 2).strength(0.1))\n      .force(\"collide\", d3.forceCollide<NodeItem>().radius(d => d.val));\n    force.on(\"tick\", () => {\n      nodesChg(prev => [...prev]);\n    });\n    return force;\n  }, [width, height]);\n\n  const dragStart = useCallback(() => {\n    force.alphaTarget(0.3).restart();\n  }, [force]);\n  const dragEnd = useCallback(() => {\n    force.alphaTarget(0);\n  }, [force]);\n  const updateNodes = useCallback(() => {\n    force.alpha(1).restart();\n  }, [force]);\n\n  const svgClick = useCallback(() => {\n    const [x, y] = zoomTransformRef.current.invert([\n      d3.event.offsetX,\n      d3.event.offsetY\n    ]);\n    nodesChg(prev => {\n      const item: NodeItem = {\n        id: prev.length + 1,\n        name: `${prev.length + 1}`,\n        val: 30,\n        x: x,\n        y: y\n      };\n      const newNodes = [...prev, item];\n      force.nodes(newNodes);\n      return newNodes;\n    });\n    updateNodes();\n  }, [force]);\n\n  useEffect(() => {\n    const svg = d3.select(svgRef.current!);\n\n    const zoom = d3\n      .zoom()\n      .scaleExtent([1, 40])\n      .translateExtent([[-100, -100], [width + 90, height + 100]]);\n    zoom.on(\"zoom\", () => {\n      changeZoromTransform(d3.event.transform);\n    });\n    zoom(svg as any);\n\n    svg.on(\"click\", svgClick);\n  }, []);\n\n  return (\n    <svg\n      width={width}\n      height={height}\n      style={{ backgroundColor: \"#ccc\" }}\n      className=\"xxx\"\n      ref={svgRef}\n    >\n      <g transform={zoomTransform.toString()}>\n        {nodes.map(node => {\n          return (\n            <Node\n              key={node.id}\n              node={node}\n              updateNodes={updateNodes}\n              dragStart={dragStart}\n              dragEnd={dragEnd}\n            />\n          );\n        })}\n      </g>\n    </svg>\n  );\n};\n\nexport default SVGForceSimulation;\n","import React, {\n  useRef,\n  useEffect,\n  useReducer,\n  createContext,\n  useContext,\n  useMemo\n} from \"react\";\nimport * as d3 from \"d3\";\nimport \"./SVGTree.css\";\n\nexport interface NodeBase {\n  name: string;\n  children?: NodeBase[];\n}\ninterface NodeData extends NodeBase {\n  pos0: Point; // 移動開始位置\n  pos1: Point; // 移動停止位置\n  open: boolean; // 子のオープン状態\n  visible: boolean;\n  _children?: NodeData[]; // 子ノード保存用\n  children?: NodeData[];\n}\ntype Node = d3.HierarchyPointNode<NodeData>;\ntype NodeFuctory = (node: NodeData) => Node;\n\ninterface Point {\n  x: number;\n  y: number;\n}\n\nconst createNodeFactory = (width: number, height: number): NodeFuctory => {\n  const tree = d3.tree<NodeData>().size([height, width - 160]);\n  return (node: NodeData) => tree(d3.hierarchy(node));\n};\n\nconst initNode = (node: NodeBase, tree: NodeFuctory): Node => {\n  const root = tree(node as NodeData);\n  root.descendants().forEach(node => {\n    node.data.pos0 = { x: root.x, y: root.y };\n    node.data.pos1 = { x: node.x, y: node.y };\n    node.data.visible = true;\n    node.data.open = true;\n  });\n  return root;\n};\n\nconst ActionClose = \"ActionClose\",\n  ActionOpen = \"ActionOpen\",\n  ActionRemove = \"ActionRemove\",\n  ActionStop = \"ActionStop\";\n\ntype ActionType =\n  | typeof ActionClose\n  | typeof ActionOpen\n  | typeof ActionRemove\n  | typeof ActionStop;\ninterface Action {\n  type: ActionType;\n  node: Node;\n  createNode: NodeFuctory;\n}\n\nfunction createOpenAction(node: Node, createNode: NodeFuctory): Action {\n  return {\n    type: ActionOpen,\n    node,\n    createNode\n  };\n}\n\nfunction createCloseAction(node: Node, createNode: NodeFuctory): Action {\n  return {\n    type: ActionClose,\n    node,\n    createNode\n  };\n}\nfunction createRemoveAction(node: Node, createNode: NodeFuctory): Action {\n  return {\n    type: ActionRemove,\n    node,\n    createNode\n  };\n}\nfunction createStopAction(node: Node, createNode: NodeFuctory): Action {\n  return {\n    type: ActionStop,\n    node,\n    createNode\n  };\n}\n\nfunction reducer(root: Node, action: Action): Node {\n  const { type, node, createNode } = action;\n  switch (type) {\n    case ActionOpen:\n      node.data.open = true;\n      // 子が無い場合は退避されているものを戻す\n      if (!node.children) {\n        node.data.children = node.data._children;\n        node.data._children = undefined;\n      }\n      // 位置再計算\n      root = createNode(root.data);\n      const newNode = root\n        .descendants()\n        .find(x => x.data.name == node.data.name);\n      if (!newNode || !newNode.children) return root;\n\n      const childrenUpdate = (children: Node[]) => {\n        children.forEach(child => {\n          child.data.visible = true;\n          child.data.pos0 = { x: node.x, y: node.y };\n          if (child.children) childrenUpdate(child.children);\n        });\n      };\n      childrenUpdate(newNode.children);\n\n      // 再計算で位置がズレている場合があるので、全ノードの位置を再設定する\n      root.descendants().forEach(n => {\n        if (n.data.visible) {\n          n.data.pos1 = { x: n.x, y: n.y };\n        }\n      });\n      return root;\n\n    case ActionClose:\n      if (!node.children) return root;\n      node.data.open = false;\n\n      const childUpdate = (children: Node[]) => {\n        children.forEach(child => {\n          child.data.visible = false;\n          child.data.pos0 = child.data.pos1;\n          child.data.pos1 = { x: node.x, y: node.y };\n          if (child.children) {\n            childUpdate(child.children);\n          }\n        });\n      };\n      childUpdate(node.children);\n      return createNode(root.data);\n\n    case ActionRemove:\n      if (!node.parent || !node.parent.data.children || node.parent.data.open)\n        return root;\n\n      // 退避\n      node.parent.data._children = node.parent.data.children;\n      node.parent.data.children = undefined;\n\n      // ノードが消えたことで位置が変わるので再計算\n      root = createNode(root.data);\n      root.descendants().forEach(n => {\n        if (n.data.visible) {\n          n.data.pos1 = { x: n.x, y: n.y };\n        }\n      });\n\n      return root;\n    case ActionStop:\n      if (node.parent) {\n        node.data.pos0 = { x: node.parent.x, y: node.parent.y };\n      } else {\n        node.data.pos0 = node.data.pos1;\n      }\n      return root; // 再計算なし\n  }\n  return root;\n}\n\ninterface ContextState {\n  dispatch: React.Dispatch<Action>;\n  createNode: NodeFuctory;\n}\nconst Context = createContext<ContextState>({} as any);\n\nconst App = (props: { width: number; height: number; data: NodeBase }) => {\n  const { width, height, data } = props;\n  const svgRef = useRef(null);\n\n  // プロパティ更新時のみ動く初期化処理\n  const { initialRoot, createNode } = useMemo(() => {\n    const createNode = createNodeFactory(width, height);\n    return {\n      initialRoot: initNode(data, createNode),\n      createNode\n    };\n  }, [width, height, data]);\n\n  const [root, dispatch] = useReducer(reducer, initialRoot);\n\n  return (\n    <Context.Provider\n      value={{\n        dispatch: dispatch,\n        createNode\n      }}\n    >\n      <svg\n        ref={svgRef}\n        width={width}\n        height={height}\n        viewBox={`-50,0,${width},${height}`}\n        style={{ backgroundColor: \"#ccc\" }}\n      >\n        {root\n          .descendants()\n          .slice(1)\n          .map(node => (\n            <Link key={node.data.name} node={node} />\n          ))}\n        {root.descendants().map((node, i) => (\n          <Node key={node.data.name} node={node} />\n        ))}\n      </svg>\n    </Context.Provider>\n  );\n};\n\nconst dulation = 250;\n\nconst Node = (props: { node: Node }) => {\n  const { node } = props;\n  const { dispatch, createNode } = useContext(Context);\n  const nodeGRef = useRef(null);\n\n  useEffect(() => {\n    const g = d3.select(nodeGRef.current);\n    g.attr(\"transform\", `translate(${node.data.pos0.y},${node.data.pos0.x})`);\n  }, []);\n\n  useEffect(() => {\n    const g = d3.select(nodeGRef.current);\n    g.on(\"click\", () => {\n      if (node.data.open) {\n        dispatch(createCloseAction(node, createNode));\n      } else {\n        dispatch(createOpenAction(node, createNode));\n      }\n    });\n\n    g.transition()\n      .duration(dulation)\n      .attr(\"transform\", `translate(${node.data.pos1.y},${node.data.pos1.x})`)\n      .attr(\"opacity\", node.data.visible ? 1 : 0)\n      .on(\"end\", () => {\n        if (!node.data.visible) {\n          dispatch(createRemoveAction(node, createNode));\n        } else {\n          dispatch(createStopAction(node, createNode));\n        }\n      });\n  }, [node]);\n\n  return (\n    <g ref={nodeGRef} opacity={0}>\n      <circle r={8} fill={node.data.open ? \"#999\" : \"#800\"} />\n      <text dy={3} x={-10} y={-5} style={{ textAnchor: \"end\" }} fontSize=\"200%\">\n        {props.node.data.name}\n      </text>\n    </g>\n  );\n};\n\nconst diagonal = d3\n  .linkHorizontal<{}, Point>()\n  .x(d => d.y)\n  .y(d => d.x);\n\nconst Link = (props: { node: Node }) => {\n  const { node } = props;\n  const pathRef = useRef<SVGPathElement>(null);\n\n  useEffect(() => {\n    const path = d3.select(pathRef.current);\n    // transitionを有効にするため、初期位置に長さ0の属性を設定\n    const data = { source: node.data.pos0, target: node.data.pos0 };\n    path.datum(data).attr(\"d\", diagonal);\n  }, []);\n\n  useEffect(() => {\n    const path = d3.select(pathRef.current);\n    let data: { source: Point; target: Point };\n    if (node.data.visible) {\n      data = { source: node.parent!, target: node.data.pos1 };\n    } else {\n      data = { source: node.data.pos1, target: node.data.pos1 };\n    }\n\n    path\n      .datum(data)\n      .transition()\n      .duration(dulation)\n      .attr(\"d\", diagonal);\n  }, [node]);\n\n  return (\n    <>\n      <path ref={pathRef} className=\"link\" />\n    </>\n  );\n};\n\nexport default App;\n","import React, {\n  Component,\n  useRef,\n  useState,\n  useCallback,\n  useEffect,\n  createRef\n} from \"react\";\nimport \"./App.css\";\nimport * as d3 from \"d3\";\nimport SVGZoom from \"./components/SVGZoom\";\nimport SVGForceSimulation from \"./components/SVGForceSimulation\";\nimport SVGTree from \"./components/SVGTree\";\n\nconst SVGPure = () => {\n  return (\n    <svg className=\"svg-root\" width=\"200\" height=\"100\">\n      <circle cx=\"100\" cy=\"50\" r=\"10\" fill=\"red\" />\n    </svg>\n  );\n};\n\nconst SVGPureClick = () => {\n  const [fill, fillChg] = useState(true);\n  const onClick = useCallback(() => {\n    fillChg(prev => !prev);\n  }, []);\n  return (\n    <svg className=\"svg-root\" width=\"200\" height=\"100\">\n      <circle\n        cx=\"100\"\n        cy=\"50\"\n        r=\"10\"\n        fill={fill ? \"red\" : \"blue\"}\n        onClick={onClick}\n      />\n    </svg>\n  );\n};\n\nconst SVGD3 = () => {\n  const svgRef = useRef(null);\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n    svg\n      .append(\"circle\")\n      .attr(\"cx\", 100)\n      .attr(\"cy\", 50)\n      .attr(\"r\", 10)\n      .attr(\"fill\", \"red\");\n  }, []);\n  return <svg ref={svgRef} className=\"svg-root\" width=\"200\" height=\"100\" />;\n};\n\nconst SVGD3Click = () => {\n  const svgRef = useRef(null);\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n    svg\n      .append(\"circle\")\n      .datum({ fill: true })\n      .attr(\"cx\", 100)\n      .attr(\"cy\", 50)\n      .attr(\"r\", 10)\n      .attr(\"fill\", \"red\")\n      .on(\"click\", function(this) {\n        d3.select<SVGCircleElement, { fill: boolean }>(this).attr(\"fill\", d => {\n          d.fill = !d.fill;\n          return d.fill ? \"blue\" : \"red\";\n        });\n      });\n  }, []);\n  return <svg ref={svgRef} className=\"svg-root\" width=\"200\" height=\"100\" />;\n};\n\nconst SVGD3ClickTransition = () => {\n  const svgRef = useRef(null);\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n    svg\n      .append(\"circle\")\n      .datum({ fill: true })\n      .attr(\"cx\", 100)\n      .attr(\"cy\", 50)\n      .attr(\"r\", 10)\n      .attr(\"fill\", \"red\")\n      .on(\"click\", function(this) {\n        d3.select<SVGCircleElement, { fill: boolean }>(this)\n          .transition()\n          .duration(1000)\n          .attr(\"fill\", d => {\n            d.fill = !d.fill;\n            return d.fill ? \"blue\" : \"red\";\n          });\n      });\n  }, []);\n  return <svg ref={svgRef} className=\"svg-root\" width=\"200\" height=\"100\" />;\n};\n\nconst Circl = (props: { x: number; y: number; r: number }) => {\n  const { x, y, r } = props;\n  const [fill, fillChg] = useState(true);\n  const onClick = useCallback(() => {\n    fillChg(prev => !prev);\n  }, []);\n  const circleRef = useRef(null);\n\n  useEffect(() => {\n    const circle = d3.select(circleRef.current);\n    circle\n      .transition()\n      .duration(1000)\n      .attr(\"fill\", fill ? \"red\" : \"blue\");\n  }, [fill]);\n\n  return (\n    <circle ref={circleRef} cx={x} cy={y} r={r} onClick={onClick} fill=\"red\" />\n  );\n};\n\nconst SVGD3ClickTransitionReact = () => {\n  return (\n    <svg className=\"svg-root\" width=\"200\" height=\"100\">\n      <Circl x={50} y={50} r={10} />\n      <Circl x={100} y={50} r={10} />\n      <Circl x={150} y={50} r={10} />\n    </svg>\n  );\n};\n\nconst Circl2 = (props: { x: number; y: number; r: number }) => {\n  const { x, y, r } = props;\n  const [fill, fillChg] = useState(true);\n  const [fillAttr, fillAttrChg] = useState(\"red\");\n  const onClick = useCallback(() => {\n    fillChg(prev => !prev);\n  }, []);\n  const circleRef = useRef(null);\n\n  useEffect(() => {\n    const circle = d3.select(circleRef.current);\n    circle\n      .transition()\n      .duration(1000)\n      .attr(\"fill\", fill ? \"red\" : \"blue\")\n      .on(\"end\", () => {\n        fillAttrChg(fill ? \"red\" : \"blue\");\n      });\n  }, [fill]);\n\n  return (\n    <circle\n      ref={circleRef}\n      cx={x}\n      cy={y}\n      r={r}\n      onClick={onClick}\n      fill={fillAttr}\n    />\n  );\n};\n\nconst SVGD3ClickTransitionReact2 = () => {\n  return (\n    <svg className=\"svg-root\" width=\"200\" height=\"100\">\n      <Circl2 x={50} y={50} r={10} />\n      <Circl2 x={100} y={50} r={10} />\n      <Circl2 x={150} y={50} r={10} />\n    </svg>\n  );\n};\n\nclass App extends Component {\n  h1Refs: { [key: string]: any } = {\n    \"#pure-click\": createRef<HTMLHeadingElement>(),\n    \"#d3\": createRef<HTMLHeadingElement>(),\n    \"#react-d3-click\": createRef<HTMLHeadingElement>(),\n    \"#react-d3-tr\": createRef<HTMLHeadingElement>(),\n    \"#react-tr\": createRef<HTMLHeadingElement>(),\n    \"#react-tr2\": createRef<HTMLHeadingElement>(),\n    \"#zoom\": createRef<HTMLHeadingElement>(),\n    \"#force\": createRef<HTMLHeadingElement>(),\n    \"#tree\": createRef<HTMLHeadingElement>()\n  };\n\n  componentDidMount() {\n    const ref = this.h1Refs[location.hash];\n    if (!ref) return;\n\n    setTimeout(() => {\n      ref.current!.scrollIntoView({\n        block: \"start\",\n        behavior: \"smooth\"\n      });\n    }, 250);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>D3なし</h1>\n        <SVGPure />\n        <h1 ref={this.h1Refs[\"#pure-click\"]}>D3なし+クリック</h1>\n        <SVGPureClick />\n        <h1 ref={this.h1Refs[\"#d3\"]}>D3</h1>\n        <SVGD3 />\n        <h1 ref={this.h1Refs[\"#react-d3-click\"]}>D3+クリック</h1>\n        <SVGD3Click />\n        <h1 ref={this.h1Refs[\"#react-d3-tr\"]}>D3+クリック+トランジション</h1>\n        <SVGD3ClickTransition />\n        <h1 ref={this.h1Refs[\"#react-tr\"]}>React+トランジション(D3)</h1>\n        <SVGD3ClickTransitionReact />\n        <h1 ref={this.h1Refs[\"#react-tr2\"]}>\n          React+トランジション(D3)+完了イベント追加\n        </h1>\n        <SVGD3ClickTransitionReact2 />\n        <h1 ref={this.h1Refs[\"#zoom\"]}>React+D3 Zoom/Pan</h1>\n        <SVGZoom width={600} height={400} />\n        <h1 ref={this.h1Refs[\"#force\"]}>React+D3 ForceSimulation</h1>\n        <p>クリックでボール追加。ドラッグ・ズーム可能。</p>\n        <SVGForceSimulation\n          width={600}\n          height={400}\n          nodes={[{ id: 1, name: \"1\", val: 30 }, { id: 2, name: \"2\", val: 40 }]}\n        />\n        <h1 ref={this.h1Refs[\"#tree\"]}>React+D3 ツリー</h1>\n        <p>クリックで開閉</p>\n        <SVGTree\n          width={600}\n          height={400}\n          data={{\n            name: \"A\",\n            children: [\n              { name: \"B\" },\n              {\n                name: \"C\",\n                children: [{ name: \"D\" }, { name: \"E\" }]\n              },\n              { name: \"F\" },\n              {\n                name: \"G\",\n                children: [{ name: \"H\" }]\n              },\n              {\n                name: \"I\",\n                children: [\n                  {\n                    name: \"J\",\n                    children: [{ name: \"K\" }, { name: \"L\" }, { name: \"M\" }]\n                  }\n                ]\n              }\n            ]\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}